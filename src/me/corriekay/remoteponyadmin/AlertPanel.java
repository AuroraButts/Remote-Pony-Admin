/*
 * Author:  Twikle Sparlight
 * Date:    Saturday, October 13, 2012
 * Purpose: Create a class that represents an alert on the targeted Minecraft  
 *          server with requisite information concerning the alert and a button
 *          for clients to use to respond to such alerts.
 */
package me.corriekay.remoteponyadmin;

/**
 * The AlertPanel class represents an alert sent out by a player on the targeted
 * Minecraft server, with fields representing the source, time, responding 
 * moderator, and a button which will be used to respond to or complete an alert.
 * @author Sparlight
 * @since CraftBukkit 1.3.2 rb1.0
 */
public class AlertPanel extends javax.swing.JPanel {

    /**
	 * Generated serial
	 */
	private static final long serialVersionUID = 4918026991063464305L;
    
    /**
     * Creates a new AlertPanel containing the name of the submitter of an alert,
     * the time the alert was sent, and the OP (if any) that resolved the issue.
     * @param submitter Source, or submitter, of an alert.
     * @param time Timestamp indicating the time the alert was created.
     * @param OP Name of the OPony that responded to the alert.
     * @param id the id of the alert
     */
    public AlertPanel(String submitter, String time, String OP, int id)
    {
        initComponents();
        submitterName.setText(submitter);
        timeStamp.setText(time);
        OPony.setText(OP);
        if(OPony.getText() != null){
        	respondButton.setEnabled(false);
        	respondButton.setText("Saved!");
        }
        this.id = id;
    }
    
    /**
     * This method returns a reference to the JButton contained in this 
     * AlertPanel.
     * @return This object's button.
     */
    public javax.swing.JButton getButton()
    {
        return respondButton;
    }
    
    /**
     * This method modifies the value contained in the OPony field.
     * @param opName Name of responding OPony.
     */
    public void setOP(String opName)
    {
        OPony.setText(opName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        submitterPanel = new javax.swing.JPanel();
        submitterName = new javax.swing.JLabel();
        timeStampPanel = new javax.swing.JPanel();
        timeStamp = new javax.swing.JLabel();
        opPanel = new javax.swing.JPanel();
        OPony = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        respondButton = new javax.swing.JButton();

        submitterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Damsel in Distress"));
        submitterPanel.setFocusable(false);

        submitterName.setText("SUBMITTING_PLAYER");
        submitterName.setFocusable(false);

        javax.swing.GroupLayout submitterPanelLayout = new javax.swing.GroupLayout(submitterPanel);
        submitterPanel.setLayout(submitterPanelLayout);
        submitterPanelLayout.setHorizontalGroup(
            submitterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(submitterName, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );
        submitterPanelLayout.setVerticalGroup(
            submitterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submitterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitterName)
                .addContainerGap())
        );

        timeStampPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Time of Abduction"));
        timeStampPanel.setFocusable(false);

        timeStamp.setText("TIME_STAMP");
        timeStamp.setFocusable(false);

        javax.swing.GroupLayout timeStampPanelLayout = new javax.swing.GroupLayout(timeStampPanel);
        timeStampPanel.setLayout(timeStampPanelLayout);
        timeStampPanelLayout.setHorizontalGroup(
            timeStampPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeStampPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeStamp, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
        );
        timeStampPanelLayout.setVerticalGroup(
            timeStampPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timeStampPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timeStamp)
                .addContainerGap())
        );

        opPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Her Prince"));
        opPanel.setFocusable(false);

        OPony.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        OPony.setText("OPONY");
        OPony.setFocusable(false);

        javax.swing.GroupLayout opPanelLayout = new javax.swing.GroupLayout(opPanel);
        opPanel.setLayout(opPanelLayout);
        opPanelLayout.setHorizontalGroup(
            opPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OPony, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addContainerGap())
        );
        opPanelLayout.setVerticalGroup(
            opPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OPony)
                .addContainerGap())
        );

        actionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Call to Arms"));
        actionPanel.setFocusable(false);

        respondButton.setText("Save her!");
        respondButton.setToolTipText("");
        actionPanel.add(respondButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(submitterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(timeStampPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(opPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(submitterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeStampPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(opPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
    }// </editor-fold>
    public int getId() {
		return id;
	}
    public String getSubmitter(){
    	return submitterName.getText();
    }
	// Variables declaration - do not modify
    private javax.swing.JLabel OPony;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JPanel opPanel;
    private javax.swing.JButton respondButton;
    private javax.swing.JLabel submitterName;
    private javax.swing.JPanel submitterPanel;
    private javax.swing.JLabel timeStamp;
    private javax.swing.JPanel timeStampPanel;
    private int id;
    // End of variables declaration
}